# Generated by Django 5.2 on 2025-05-07 11:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Вставте картинку контента', upload_to='', verbose_name='Картинка контента')),
                ('title', models.CharField(help_text='Введите название контента', max_length=200, verbose_name='Название контента')),
                ('summery', models.TextField(help_text='Введите описание контента', max_length=1000, verbose_name='Описание контента')),
                ('evaluation', models.FloatField(help_text='Оценка от 1.0 до 10.0', validators=[django.core.validators.MinValueValidator(1.0, message='Оценка не может быть меньше 1.0'), django.core.validators.MaxValueValidator(10.0, message='Оценка не может быть больше 10.0')], verbose_name='Оценка')),
            ],
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите имя издателя', max_length=100, verbose_name='Имя издателя')),
                ('summery', models.TextField(help_text='Введите описание издателя', max_length=2000, verbose_name='Описание издателя')),
            ],
        ),
        migrations.CreateModel(
            name='ReasonsToBuy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summery', models.TextField(help_text='Введите описание причины', max_length=2000, verbose_name='Описание причины')),
            ],
        ),
        migrations.CreateModel(
            name='TypeContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_type', models.CharField(help_text='Введите название контента', max_length=50, verbose_name='Тип контента')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('content_like', models.ForeignKey(help_text='Введите контент который нравится пользователю', on_delete=django.db.models.deletion.CASCADE, to='application.content', verbose_name='Контент который нравится пользователю')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='content',
            name='creator',
            field=models.ManyToManyField(help_text='Введите создателя контента', to='application.creator', verbose_name='Создатель контента'),
        ),
        migrations.AddField(
            model_name='content',
            name='reasons_to_buy',
            field=models.ManyToManyField(help_text='Введите причины опробовать данный контент', to='application.reasonstobuy', verbose_name='Причины опробовать данный контент'),
        ),
        migrations.AddField(
            model_name='content',
            name='type_content',
            field=models.ForeignKey(help_text='Введите типы контента', on_delete=django.db.models.deletion.CASCADE, to='application.typecontent', verbose_name='Типы контента'),
        ),
    ]
